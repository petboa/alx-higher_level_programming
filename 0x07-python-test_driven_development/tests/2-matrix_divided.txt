from matrix_divided import matrix_divided

matrix = [[1, 2, 3], [4, 5, 6]]
print(matrix_divided(matrix, 3))

"""ERRORS"""

# Handling ZeroDivisionError
try:
    matrix = [[1, 2], [4, 5]]
    print(matrix_divided(matrix, 0))
except ZeroDivisionError:
    print("Cannot divide by zero.")

# Handling TypeError
try:
    matrix = [[1, "a", 3], [4, 5, 6]]
    print(matrix_divided(matrix, 3))
except TypeError:
    print("Matrix must be a matrix (list of lists) of integers/floats.")

# Handling TypeError for non-equal rows
try:
    matrix = [[1, 2, 3], [4, 5, 6, 3]]
    print(matrix_divided(matrix, 3))
except TypeError:
    print("Each row of the matrix must have the same size.")

# Handling TypeError for non-numeric divisor
try:
    matrix = [[1, 2, 3], [4, 5, 6]]
    print(matrix_divided(matrix, "sponge"))
except TypeError:
    print("Divisor must be a number.")

# Handling TypeError for empty matrix
try:
    matrix = [[]]
    print(matrix_divided(matrix, 3))
except TypeError:
    print("Matrix must be a matrix (list of lists) of integers/floats.")

# Handling TypeError for empty matrix
try:
    matrix = []
    print(matrix_divided(matrix, 3))
except TypeError:
    print("Matrix must be a matrix (list of lists) of integers/floats.")

# Handling TypeError for NoneType matrix
try:
    matrix = None
    print(matrix_divided(matrix, 3))
except TypeError:
    print("Matrix must be a matrix (list of lists) of integers/floats.")

# Handling NameError for infinity
import math
try:
    matrix = [[1, 2, 3], [4, 5, 6]]
    print(matrix_divided(matrix, float('inf')))
except NameError:
    print("Divisor cannot be infinity.")

# Handling TypeError for missing argument
try:
    matrix = [[1, 2, 3], [4, 5, 6]]
    print(matrix_divided(matrix))
except TypeError:
    print("matrix_divided() missing 1 required positional argument: 'div'")

# Handling SyntaxError for missing argument
try:
    matrix = [[1, 2, 3], [4,
